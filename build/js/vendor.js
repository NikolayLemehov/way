!function(t){var o={};function r(n){if(o[n])return o[n].exports;var e=o[n]={i:n,l:!1,exports:{}};return t[n].call(e.exports,e,e.exports,r),e.l=!0,e.exports}r.m=t,r.c=o,r.d=function(n,e,t){r.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:t})},r.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},r.t=function(e,n){if(1&n&&(e=r(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(r.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var o in e)r.d(t,o,function(n){return e[n]}.bind(null,o));return t},r.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return r.d(e,"a",e),e},r.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},r.p="",r(r.s="./js/vendor.js")}({"./js/vendor.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _vendor_move_to__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./vendor/move-to */ "./js/vendor/move-to.js");\n\nObject(_vendor_move_to__WEBPACK_IMPORTED_MODULE_0__["moveTo"])();\n\n//# sourceURL=webpack:///./js/vendor.js?')},"./js/vendor/move-to.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"moveTo\", function() { return moveTo; });\nvar moveTo = function moveTo() {\n  var MoveTo = function () {\n    /**\n     * Defaults\n     * @type {object}\n     */\n    var defaults = {\n      tolerance: 0,\n      duration: 800,\n      easing: 'easeOutQuart',\n      container: window,\n      callback: function callback() {}\n    };\n    /**\n     * easeOutQuart Easing Function\n     * @param  {number} t - current time\n     * @param  {number} b - start value\n     * @param  {number} c - change in value\n     * @param  {number} d - duration\n     * @return {number} - calculated value\n     */\n\n    function easeOutQuart(t, b, c, d) {\n      t /= d;\n      t--;\n      return -c * (t * t * t * t - 1) + b;\n    }\n    /**\n     * Merge two object\n     *\n     * @param  {object} obj1\n     * @param  {object} obj2\n     * @return {object} merged object\n     */\n\n\n    function mergeObject(obj1, obj2) {\n      var obj3 = {};\n      Object.keys(obj1).forEach(function (propertyName) {\n        obj3[propertyName] = obj1[propertyName];\n      });\n      Object.keys(obj2).forEach(function (propertyName) {\n        obj3[propertyName] = obj2[propertyName];\n      });\n      return obj3;\n    }\n\n    ;\n    /**\n     * Converts camel case to kebab case\n     * @param  {string} val the value to be converted\n     * @return {string} the converted value\n     */\n\n    function kebabCase(val) {\n      return val.replace(/([A-Z])/g, function ($1) {\n        return '-' + $1.toLowerCase();\n      });\n    }\n\n    ;\n    /**\n     * Count a number of item scrolled top\n     * @param  {Window|HTMLElement} container\n     * @return {number}\n     */\n\n    function countScrollTop(container) {\n      if (container instanceof HTMLElement) {\n        return container.scrollTop;\n      }\n\n      return container.pageYOffset;\n    }\n\n    ;\n    /**\n     * MoveTo Constructor\n     * @param {object} options Options\n     * @param {object} easeFunctions Custom ease functions\n     */\n\n    function MoveTo() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var easeFunctions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      this.options = mergeObject(defaults, options);\n      this.easeFunctions = mergeObject({\n        easeOutQuart: easeOutQuart\n      }, easeFunctions);\n    }\n    /**\n     * Register a dom element as trigger\n     * @param  {HTMLElement} dom Dom trigger element\n     * @param  {function} callback Callback function\n     * @return {function|void} unregister function\n     */\n\n\n    MoveTo.prototype.registerTrigger = function (dom, callback) {\n      var _this = this;\n\n      if (!dom) {\n        return;\n      }\n\n      var href = dom.getAttribute('href') || dom.getAttribute('data-target'); // The element to be scrolled\n\n      var target = href && href !== '#' ? document.getElementById(href.substring(1)) : document.body;\n      var options = mergeObject(this.options, _getOptionsFromTriggerDom(dom, this.options));\n\n      if (typeof callback === 'function') {\n        options.callback = callback;\n      }\n\n      var listener = function listener(e) {\n        e.preventDefault();\n\n        _this.move(target, options);\n      };\n\n      dom.addEventListener('click', listener, false);\n      return function () {\n        return dom.removeEventListener('click', listener, false);\n      };\n    };\n    /**\n     * Move\n     * Scrolls to given element by using easeOutQuart function\n     * @param  {HTMLElement|number} target Target element to be scrolled or target position\n     * @param  {object} options Custom options\n     */\n\n\n    MoveTo.prototype.move = function (target) {\n      var _this2 = this;\n\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (target !== 0 && !target) {\n        return;\n      }\n\n      options = mergeObject(this.options, options);\n      var distance = typeof target === 'number' ? target : target.getBoundingClientRect().top;\n      var from = countScrollTop(options.container);\n      var startTime = null;\n      var lastYOffset;\n      distance -= options.tolerance; // rAF loop\n\n      var loop = function loop(currentTime) {\n        var currentYOffset = countScrollTop(_this2.options.container);\n\n        if (!startTime) {\n          // To starts time from 1, we subtracted 1 from current time\n          // If time starts from 1 The first loop will not do anything,\n          // because easing value will be zero\n          startTime = currentTime - 1;\n        }\n\n        var timeElapsed = currentTime - startTime;\n\n        if (lastYOffset) {\n          if (distance > 0 && lastYOffset > currentYOffset || distance < 0 && lastYOffset < currentYOffset) {\n            return options.callback(target);\n          }\n        }\n\n        lastYOffset = currentYOffset;\n\n        var val = _this2.easeFunctions[options.easing](timeElapsed, from, distance, options.duration);\n\n        options.container.scroll(0, val);\n\n        if (timeElapsed < options.duration) {\n          window.requestAnimationFrame(loop);\n        } else {\n          options.container.scroll(0, distance + from);\n          options.callback(target);\n        }\n      };\n\n      window.requestAnimationFrame(loop);\n    };\n    /**\n     * Adds custom ease function\n     * @param {string}   name Ease function name\n     * @param {function} fn   Ease function\n     */\n\n\n    MoveTo.prototype.addEaseFunction = function (name, fn) {\n      this.easeFunctions[name] = fn;\n    };\n    /**\n     * Returns options which created from trigger dom element\n     * @param  {HTMLElement} dom Trigger dom element\n     * @param  {object} options The instance's options\n     * @return {object} The options which created from trigger dom element\n     */\n\n\n    function _getOptionsFromTriggerDom(dom, options) {\n      var domOptions = {};\n      Object.keys(options).forEach(function (key) {\n        var value = dom.getAttribute(\"data-mt-\".concat(kebabCase(key)));\n\n        if (value) {\n          domOptions[key] = isNaN(value) ? value : parseInt(value, 10);\n        }\n      });\n      return domOptions;\n    }\n\n    return MoveTo;\n  }(); // if (typeof module !== 'undefined') {\n  //   module.exports = MoveTo;\n  // } else {\n  //   window.MoveTo = MoveTo;\n  // }\n\n\n  window.MoveTo = MoveTo;\n};\n\n\n\n//# sourceURL=webpack:///./js/vendor/move-to.js?")}});